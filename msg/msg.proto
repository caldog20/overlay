syntax = "proto3";

import "google/protobuf/empty.proto";

package msg;

option go_package = "github.com/caldog20/go-overlay/msg";

message Remote {
  uint32 id = 1;
  string key = 2;
  string vpn_ip = 3;
  string remote = 4;
}

message RegisterRequest {
  uint32 id = 1;
  string key = 2;
  string port = 3;
}

message RegisterReply {
  string vpn_ip = 1;
}

message DeregisterRequest {
  uint32 id = 1;
}

message RemoteListRequest {
  uint32 id = 1;
}

message RemoteListReply {
  repeated Remote remotes = 1;
}

message WhoIsIPRequest {
  string vpn_ip = 1;
}

message WhoIsIDRequest {
  uint32 id = 1;
}

message PunchRequest {
  string src_vpn_ip = 1;
  string dst_vpn_ip = 2;
}

message PunchNotification {
  string remote = 1;
}

message PunchSubscribe {
  uint32 id = 1;
}



service ControlService {
  rpc Register(RegisterRequest) returns (RegisterReply) {}
  rpc Deregister(DeregisterRequest) returns (google.protobuf.Empty) {}
  rpc WhoIsIp(WhoIsIPRequest) returns (Remote) {}
  rpc WhoIsID(WhoIsIDRequest) returns (Remote) {}
  rpc RemoteList(RemoteListRequest) returns (RemoteListReply) {}
  rpc PunchSubscriber(PunchSubscribe) returns (stream PunchNotification) {}
  rpc Punch(PunchRequest) returns (google.protobuf.Empty) {}
  //  rpc PunchNotifier(PunchSubscribe) returns (stream PunchNotification) {}
}