syntax = "proto3";

package proto;

option go_package = "github.com/caldog20/overlay/proto";

service ControlPlane {
  rpc Login(LoginRequest) returns (LoginResponse) {}
  rpc Register(RegisterRequest) returns (RegisterResponse) {}
  rpc Updater(UpdateRequest) returns (stream Update) {}
  rpc Punch(PunchRequest) returns (PunchReply) {}
}

message LoginRequest {
  string public_key = 1;
  Endpoint endpoint = 2;
}

message LoginResponse {
  uint32 id = 1;
  PeerConfig config = 2;
}

message RegisterRequest {
  string public_key = 1;
  string token = 2;
}

message RegisterResponse {
  string status = 1;
}

message UpdateRequest {
  uint32 id = 1;
}

message Update {
  enum Type {
    NONE = 0;
    PUNCH = 1;
    CONFIG = 2;
    PEER_CONNECT = 3;
    PEER_DISCONNECT = 4;
    PEER_UPDATE = 5;
  }

  uint32 id = 1;
  oneof update {
    PeerConfig peer_config = 2;
    RemotePeers remote_peers = 3;
    PunchRequest punch_request = 4;
  }

}

message PeerConfig {
  string tunnel_ip = 1;
  //string network = 2;
}

message RemotePeers {
  uint32 count = 1;
  repeated RemotePeer remote_peers = 2;
}

message RemotePeer {
  uint32 id = 1;
  string public_key = 2;
  string tunnel_ip = 3;
  repeated Endpoint endpoints = 4;
}

message Endpoint {
  string endpoint = 1;
}

message DiscoverEndpoint {
  uint32 id = 1;
}

message PunchRequest {
  Endpoint endpoint = 1;
}

message PunchReply {}