syntax = "proto3";

package proto;

option go_package = "github.com/caldog20/overlay/proto/gen;proto";

service ControlPlane {
  rpc LoginPeer(LoginRequest) returns (LoginResponse) {}
  rpc RegisterPeer(RegisterRequest) returns (RegisterResponse) {}
  rpc SetPeerEndpoint(Endpoint) returns (EmptyResponse) {}
  rpc Update(UpdateRequest) returns (stream UpdateResponse) {}
  rpc Punch(PunchRequest) returns (EmptyResponse) {}
}

message LoginRequest {
  string public_key = 1;
}

message LoginResponse {
  PeerConfig config = 1;
}

message PeerConfig {
  uint32 id = 1;
  string tunnel_ip = 2;
}

message RegisterRequest {
  string public_key = 1;
  string register_key = 2;
}

message RegisterResponse {}

message Endpoint {
  uint32 id = 1;
  string endpoint = 2;
}

message EmptyResponse {}

message RemotePeerList {
  uint32 count = 1;
  repeated Peer peers = 2;
}

message Peer {
  uint32 id = 1;
  string public_key = 2;
  string endpoint = 3;
  string tunnel_ip = 4;
}

message UpdateRequest {
  uint32 id = 1;
}

message UpdateResponse {
  enum UpdateType {
    INIT = 0;
    CONNECT = 1;
    DISCONNECT = 2;
    PUNCH = 3;
  }

  UpdateType update_type = 1;
  RemotePeerList peer_list = 2;
}

message EndpointDiscovery {
  uint32 id = 1;
}

message EndpointDiscoveryResponse {
  string endpoint = 1;
}

message PunchRequest {
  uint32 req_peer_id = 1;
  uint32 dst_peer_id = 2;
  string endpoint = 3;
}

message PunchNotification {
  string endpoint = 1;
}